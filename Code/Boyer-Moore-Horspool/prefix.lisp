(in-package :one-more-re-nightmare)

(trivia:defun-match %prefix (re)
  "Find the constant string prefix of a regular expression."
  ((literal set)
   (if (and (typep set 'positive-symbol-set)
            (alexandria:length= 1 (elements set)))
       (values (list (first (elements set))) nil)
       (values nil re)))
  ((join r s)
   (multiple-value-bind (prefix1 suffix1)
       (%prefix r)
     (cond
       ((null prefix1)
        (values nil re))
       ((null suffix1)
        (multiple-value-bind (prefix2 suffix2)
            (%prefix s)
          (values (append prefix1 prefix2) suffix2)))
       (t
        (values prefix1 (join suffix1 s))))))
  (_ (values nil re)))

(defun prefix (re)
  (multiple-value-bind (prefix suffix)
      (%prefix re)
    (if (< (length prefix) 2)
        (values #() re)
        (values (coerce prefix 'vector)
                (if (null suffix)
                    (empty-string)
                    suffix)))))
